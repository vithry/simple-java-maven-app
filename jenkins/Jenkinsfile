def dockerImg
pipeline {
    agent {
      docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
                sh "sudo chown -R $USER: ${WORKSPACE}"
            }
        }
        stage('Build Docker Img'){
          steps {
            script {
              writeFile file: "Dockerfile", text: """FROM java:8-jdk-alpine
              COPY ./target/my-app-1.0-SNAPSHOT.jar /usr/app/
              WORKDIR /usr/app
              EXPOSE 8080
              ENTRYPOINT ["java", "-jar", "my-app-1.0-SNAPSHOT.jar"]
            """
              dockerImg = docker.build("example/simple-java-project", '.')
            }

          }

        }

        stage('Push Docker Img') {
          steps{
            script{
              docker.withRegistry('http://localhost:8082') {
                  dockerImg.push("1.0")
              }
            }
          }

        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
      /*  stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }   */
    }
}
